import{_ as s,c as i,o as n,ag as e}from"./chunks/framework.BQTfl1i0.js";const k=JSON.parse('{"title":"2. 面向对象编程","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"foundation/面向对象编程.md","filePath":"foundation/面向对象编程.md"}'),t={name:"foundation/面向对象编程.md"};function l(p,a,o,c,r,h){return n(),i("div",null,a[0]||(a[0]=[e(`<h1 id="_2-面向对象编程" tabindex="-1">2. 面向对象编程 <a class="header-anchor" href="#_2-面向对象编程" aria-label="Permalink to &quot;2. 面向对象编程&quot;">​</a></h1><p>Java是一种面向对象的编程语言。面向对象编程，英文是Object-Oriented Programming，简称OOP；</p><p><strong>什么是面向对象编程？</strong></p><p>首先了解一下面向过程编程，它是把模型分解成一步一步的过程。人们只需按照自己的意义编写各个函数。比如，要编写一个TODO任务，必须按照以下步骤一步一步来：</p><ol><li>读取文件；</li><li>编写OTDO；</li><li>保存文件；</li></ol><p>而面向对象编程，核心的内容就是“对象”，一切围绕对象。有了对象就可以和对象互动：通过对象来访问需要的属性或方法函数；</p><p>因此，面向对象编程就是一种通过对象的方式，把现实世界的问题映射到计算机模型对象的一种编程方法。</p><blockquote><p>面向对象编程主要体现以下3个特性：</p><ol><li>封装性</li><li>继承</li><li>多态</li></ol></blockquote><h3 id="class和instance" tabindex="-1">Class和instance <a class="header-anchor" href="#class和instance" aria-label="Permalink to &quot;Class和instance&quot;">​</a></h3><p>Class是一种对象模版，它定义了如何创建实例。因此，class本身就是一种数据类型；而instance是对象实例，instance是根据class创建的实例，可以创建多个instance，每个instance类型相同，但各自拥有的属性可能不相同。</p><h3 id="定义class" tabindex="-1">定义Class <a class="header-anchor" href="#定义class" aria-label="Permalink to &quot;定义Class&quot;">​</a></h3><p>在Java中，创建一个类。例如：给这个类命名为<code>Person</code>,就是定义一个<code>class</code>。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Person</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 成员属性 字段变量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String name;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> age;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,13)]))}const _=s(t,[["render",l]]);export{k as __pageData,_ as default};
